{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n  constructor(messages, scheduler) {\n    super();\n    this.messages = messages;\n    this.subscriptions = [];\n    this.scheduler = scheduler;\n  }\n\n  _subscribe(subscriber) {\n    const subject = this;\n    const index = subject.logSubscribedFrame();\n    const subscription = new Subscription();\n    subscription.add(new Subscription(() => {\n      subject.logUnsubscribedFrame(index);\n    }));\n    subscription.add(super._subscribe(subscriber));\n    return subscription;\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n\n    for (var i = 0; i < messagesLength; i++) {\n      (() => {\n        var message = subject.messages[i];\n        subject.scheduler.schedule(() => {\n          message.notification.observe(subject);\n        }, message.frame);\n      })();\n    }\n  }\n\n}\napplyMixins(HotObservable, [SubscriptionLoggable]); //# sourceMappingURL=HotObservable.js.map","map":null,"metadata":{},"sourceType":"module"}