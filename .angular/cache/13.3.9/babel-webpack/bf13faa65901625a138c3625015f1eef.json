{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class ColdObservable extends Observable {\n  constructor(messages, scheduler) {\n    super(function (subscriber) {\n      const observable = this;\n      const index = observable.logSubscribedFrame();\n      const subscription = new Subscription();\n      subscription.add(new Subscription(() => {\n        observable.logUnsubscribedFrame(index);\n      }));\n      observable.scheduleMessages(subscriber);\n      return subscription;\n    });\n    this.messages = messages;\n    this.subscriptions = [];\n    this.scheduler = scheduler;\n  }\n\n  scheduleMessages(subscriber) {\n    const messagesLength = this.messages.length;\n\n    for (let i = 0; i < messagesLength; i++) {\n      const message = this.messages[i];\n      subscriber.add(this.scheduler.schedule(({\n        message,\n        subscriber\n      }) => {\n        message.notification.observe(subscriber);\n      }, message.frame, {\n        message,\n        subscriber\n      }));\n    }\n  }\n\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]); //# sourceMappingURL=ColdObservable.js.map","map":null,"metadata":{},"sourceType":"module"}