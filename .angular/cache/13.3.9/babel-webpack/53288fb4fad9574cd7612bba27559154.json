{"ast":null,"code":"import { Router, ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/toPromise';\nimport { DID } from './did';\nimport { DIDService } from './did.service';\nimport { AUserService } from '../user/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./did.service\";\nimport * as i3 from \"../user/user.service\";\nimport * as i4 from \"@nebular/theme\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction AssignDIDComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", user_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r1.username, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport let AssignDIDComponent = /*#__PURE__*/(() => {\n  class AssignDIDComponent {\n    constructor(route, did_service, router, user_service) {\n      this.route = route;\n      this.did_service = did_service;\n      this.router = router;\n      this.user_service = user_service;\n      this.did = new DID();\n      this.form1 = {};\n      this.id = null;\n      this.user = [];\n    }\n\n    ngOnInit() {\n      this.getUserList();\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        const test_url = this.router.url.split('/');\n        const lastsegment = test_url[test_url.length - 1];\n\n        if (lastsegment === 'new') {\n          return null;\n        } else {\n          return this.did_service.get_DIDData(this.id).then(data => {\n            this.did = data;\n          });\n        }\n      });\n    }\n\n    getUserList() {\n      this.user_service.get_UserList().then(data => {\n        this.user = data;\n      });\n    }\n\n    forwardDID() {\n      this.did_service.unassign_DID(this.did).then(response => {\n        this.did_service.assign_DID(this.did).then(data => {\n          this.router.navigate(['../../../did'], {\n            relativeTo: this.route\n          });\n        });\n      });\n    }\n\n    get selectedUsr() {\n      return this.selectedUser;\n    }\n\n    set selectedUsr(value) {\n      this.selectedUser = value;\n      this.did.user_id = this.selectedUser.user_id;\n    }\n\n    handleError(error) {\n      console.error('An error occurred', error);\n      return Promise.reject(error.message || error);\n    }\n\n  }\n\n  AssignDIDComponent.ɵfac = function AssignDIDComponent_Factory(t) {\n    return new (t || AssignDIDComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DIDService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.AUserService));\n  };\n\n  AssignDIDComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssignDIDComponent,\n    selectors: [[\"ngx-assign-did-component\"]],\n    decls: 24,\n    vars: 5,\n    consts: [[1, \"col-lg-12\"], [\"for\", \"phone\"], [\"type\", \"text\", \"placeholder\", \"DID Number\", \"disabled\", \"\", \"id\", \"phone\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"name\", \"user\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"ngValue\"]],\n    template: function AssignDIDComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"Assign DID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"nb-card\")(5, \"nb-card-header\");\n        i0.ɵɵtext(6, \" DID Information \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"nb-card-body\")(8, \"label\", 1);\n        i0.ɵɵtext(9, \"DID Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AssignDIDComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.did.phone = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"nb-card\")(13, \"nb-card-header\");\n        i0.ɵɵtext(14, \" User Information \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"nb-card-body\")(16, \"label\");\n        i0.ɵɵtext(17, \"Assign to User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AssignDIDComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.selectedUsr = $event;\n        });\n        i0.ɵɵtemplate(20, AssignDIDComponent_option_20_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function AssignDIDComponent_Template_button_click_22_listener() {\n          return ctx.forwardDID();\n        });\n        i0.ɵɵtext(23, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.did.phone)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUsr);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.user);\n      }\n    },\n    directives: [i4.NbCardComponent, i4.NbCardHeaderComponent, i4.NbCardBodyComponent, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i5.SelectControlValueAccessor, i6.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return AssignDIDComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}