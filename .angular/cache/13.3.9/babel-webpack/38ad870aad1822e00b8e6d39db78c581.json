{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n  return function filterOperatorFunction(source) {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator {\n  constructor(predicate, thisArg) {\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n\n}\n\nclass FilterSubscriber extends Subscriber {\n  constructor(destination, predicate, thisArg) {\n    super(destination);\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n    this.count = 0;\n  }\n\n  _next(value) {\n    let result;\n\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n\n} //# sourceMappingURL=filter.js.map","map":null,"metadata":{},"sourceType":"module"}