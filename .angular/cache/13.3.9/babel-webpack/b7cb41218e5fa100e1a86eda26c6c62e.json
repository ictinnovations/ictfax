{"ast":null,"code":"import { DID } from './did';\nimport { DIDService } from './did.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./did.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@nebular/theme\";\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport let BatchDIDComponent = /*#__PURE__*/(() => {\n  class BatchDIDComponent {\n    constructor(did_service, router, route) {\n      this.did_service = did_service;\n      this.router = router;\n      this.route = route;\n      this.did = new DID();\n      this.did.active = 1;\n    }\n\n    addDID() {\n      for (let i = this.did.range_from; i <= this.did.range_to; i++) {\n        this.did.phone = i;\n        this.did.username = this.did.phone;\n        this.did.first_name = this.did.title + ' ' + i;\n        this.did_service.add_DID(this.did).then(response => {});\n\n        if (i == this.did.range_to) {\n          this.router.navigate(['../../did'], {\n            relativeTo: this.route\n          });\n        }\n      }\n    }\n\n  }\n\n  BatchDIDComponent.ɵfac = function BatchDIDComponent_Factory(t) {\n    return new (t || BatchDIDComponent)(i0.ɵɵdirectiveInject(i1.DIDService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  BatchDIDComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BatchDIDComponent,\n    selectors: [[\"ngx-batch-did-component\"]],\n    decls: 35,\n    vars: 13,\n    consts: [[1, \"col-lg-12\"], [\"id\", \"form\"], [\"f1\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-9\"], [1, \"form-group\"], [\"for\", \"range_from\"], [\"type\", \"text\", \"id\", \"range_from\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"range_from\", \"ngModel\"], [1, \"alert\", \"alert-danger\", 3, \"hidden\"], [3, \"hidden\"], [\"for\", \"did_number\"], [\"type\", \"text\", \"id\", \"range_to\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"range_to\", \"ngModel\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function BatchDIDComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"DID Numbers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1, 2)(5, \"nb-card\")(6, \"nb-card-header\");\n        i0.ɵɵtext(7, \" DID Information \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"nb-card-body\")(9, \"div\", 3)(10, \"div\", 4)(11, \"div\", 5)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Range From:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 7, 8);\n        i0.ɵɵlistener(\"ngModelChange\", function BatchDIDComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.did.range_from = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 10);\n        i0.ɵɵtext(18, \"Range From field is required.\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Range To:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function BatchDIDComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.did.range_to = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"div\", 10);\n        i0.ɵɵtext(27, \"Range to field is required.\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 4)(29, \"div\", 5)(30, \"label\", 14);\n        i0.ɵɵtext(31, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function BatchDIDComponent_Template_input_ngModelChange_32_listener($event) {\n          return ctx.did.title = $event;\n        });\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(33, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function BatchDIDComponent_Template_button_click_33_listener() {\n          return ctx.addDID();\n        });\n        i0.ɵɵtext(34, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(15);\n\n        const _r2 = i0.ɵɵreference(24);\n\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.did.range_from)(\"ngModelOptions\", i0.ɵɵpureFunction0(10, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", _r1.valid || _r1.pristine);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !_r1.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.did.range_to)(\"ngModelOptions\", i0.ɵɵpureFunction0(11, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !_r2.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.did.title)(\"ngModelOptions\", i0.ɵɵpureFunction0(12, _c0));\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.NbCardComponent, i4.NbCardHeaderComponent, i4.NbCardBodyComponent, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\"]\n  });\n  return BatchDIDComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}