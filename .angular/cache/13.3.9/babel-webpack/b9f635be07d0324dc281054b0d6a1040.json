{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let CheckValidator = /*#__PURE__*/(() => {\n  class CheckValidator {\n    constructor(ngx_validateCheck) {\n      this.ngx_validateCheck = ngx_validateCheck;\n    }\n\n    validate(c) {\n      // self value (e.g. retype password)\n      const v = c.value; // control value (e.g. password)\n\n      const e = c.root.get(this.ngx_validateCheck); // value not equal\n\n      if (e && v !== e.value) {\n        return {\n          ngx_validateCheck: false\n        };\n      }\n\n      return null;\n    }\n\n  }\n\n  CheckValidator.ɵfac = function CheckValidator_Factory(t) {\n    return new (t || CheckValidator)(i0.ɵɵinjectAttribute('ngx_validateCheck'));\n  };\n\n  CheckValidator.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CheckValidator,\n    selectors: [[\"\", \"ngx_validateCheck\", \"\", \"formControlName\", \"\"], [\"\", \"ngx_validateCheck\", \"\", \"formControl\", \"\"], [\"\", \"ngx_validateCheck\", \"\", \"ngModel\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => CheckValidator),\n      multi: true\n    }])]\n  });\n  return CheckValidator;\n})();","map":null,"metadata":{},"sourceType":"module"}