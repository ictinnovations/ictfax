{"ast":null,"code":"import { Headers } from '@angular/http';\nimport { Http, RequestOptions } from '@angular/http';\nimport { AppService } from '../../app.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/http\";\nimport * as i2 from \"../../app.service\";\nexport let DashboardService = /*#__PURE__*/(() => {\n  class DashboardService {\n    constructor(http, app_service) {\n      this.http = http;\n      this.app_service = app_service;\n    }\n\n    get_Statistics() {\n      const headers = new Headers();\n      this.app_service.createAuthorizationHeader(headers);\n      const options = new RequestOptions({\n        headers: headers\n      });\n      return this.http.get(this.app_service.apiUrlDashboard, options).toPromise().then(response => response.json()).catch(response => this.app_service.handleError(response));\n    }\n\n    get_didStat() {\n      const headers = new Headers();\n      this.app_service.createAuthorizationHeader(headers);\n      const options = new RequestOptions({\n        headers: headers\n      });\n      const url = `${this.app_service.apiUrlDashboard}?account_type=did`;\n      return this.http.get(url, options).toPromise().then(response => response.json()).catch(response => this.app_service.handleError(response));\n    }\n\n    get_outFaxStat() {\n      const headers = new Headers();\n      this.app_service.createAuthorizationHeader(headers);\n      const options = new RequestOptions({\n        headers: headers\n      });\n      const url = `${this.app_service.apiUrlDashboard}?service_flag=2`;\n      return this.http.get(url, options).toPromise().then(response => response.json()).catch(response => this.app_service.handleError(response));\n    }\n\n  }\n\n  DashboardService.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(i1.Http), i0.ɵɵinject(i2.AppService));\n  };\n\n  DashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac\n  });\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}